name: 📊 Novi's Enhanced Daily Intelligence Report (PDF Version)

on:
  schedule:
    # Runs at 11:30 PM UTC (5:00 AM IST next day)
    - cron: '30 23 * * *'
  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode'
        required: false
        default: 'false'
        type: boolean

jobs:
  generate-and-send-enhanced-pdf-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install System Dependencies for WeasyPrint
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev \
          python3-pip \
          python3-cffi \
          python3-brotli \
          libpango-1.0-0 \
          libharfbuzz0b \
          libpangoft2-1.0-0 \
          libfontconfig1-dev \
          libcairo2-dev \
          libgdk-pixbuf2.0-dev
          
    - name: 📧 Cache Python Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: 📦 Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 Check Python Syntax
      run: |
        echo "🔍 Checking syntax of all Python files..."
        python -m py_compile src/data_collectors/jobs_collector.py
        python -m py_compile src/data_collectors/stock_collector.py  
        python -m py_compile src/data_collectors/sap_collector.py
        python -m py_compile src/data_collectors/news_collector.py
        python -m py_compile src/utils/email_sender.py
        python -m py_compile src/utils/pdf_generator.py
        python -m py_compile src/report_generator.py
        python -m py_compile config.py
        echo "✅ Syntax check passed for all files"
        
    - name: 🕐 Set Timezone to IST
      run: |
        sudo timedatectl set-timezone Asia/Kolkata
        echo "Current time: $(date)"
        
    - name: 📁 Create Required Directories
      run: |
        mkdir -p reports
        mkdir -p src/templates
        mkdir -p logs
        echo "✅ Directories created"
        
    - name: 🔧 Validate Configuration
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
      run: |
        python -c "
        import os
        from src.utils.email_sender import EmailSender
        sender = EmailSender()
        issues = sender.validate_configuration()
        if issues:
            print('❌ Configuration Issues:')
            for issue in issues:
                print(f'  - {issue}')
            exit(1)
        else:
            print('✅ Email configuration validated successfully')
        "
        
    - name: 🧪 Test Email Configuration (if test mode)
      if: ${{ github.event.inputs.test_mode == 'true' }}
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
      run: |
        python -c "
        from src.utils.email_sender import EmailSender
        sender = EmailSender()
        success = sender.send_test_email()
        if success:
            print('✅ Test email sent successfully')
        else:
            print('❌ Test email failed')
            exit(1)
        "
        
    - name: 📊 Generate and Send Enhanced PDF Report
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
      run: |
        echo "🚀 Starting Enhanced PDF report generation..."
        python src/report_generator.py
        echo "📧 Enhanced PDF report generation completed"
        
    - name: 📂 Archive Enhanced PDF Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: novi-enhanced-intelligence-report-pdf
        path: reports/*.pdf
        retention-days: 30
        
    - name: 📝 Log Completion
      if: success()
      run: |
        echo "✅ Enhanced PDF Report generated and sent successfully at $(date)"
        echo "📊 Next report scheduled for tomorrow at 5:00 AM IST"  
        echo "📄 Report archived as GitHub Actions artifact"
        echo "🔧 Includes: SAP jobs, AI transition jobs, enhanced stock analysis, AI insights"
        
    - name: 🚨 Handle Errors
      if: failure()
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
      run: |
        echo "❌ Enhanced PDF report generation failed"
        echo "📧 Sending error notification..."
        python -c "
        import os
        import traceback
        from src.utils.email_sender import EmailSender
        try:
            sender = EmailSender()
            error_msg = 'GitHub Actions workflow failed during Enhanced PDF generation. Check the Actions logs for details.'
            sender.send_error_notification(error_msg, 'Enhanced PDF Report Generation Failure')
            print('📧 Error notification sent')
        except Exception as e:
            print(f'Failed to send error notification: {e}')
        "
        
    - name: 📈 Upload Logs (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: failure-logs-enhanced-pdf
        path: |
          *.log
          /tmp/*.log
          reports/
          logs/
        retention-days: 7
